<Window x:Class="WordCloudMVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d ignore"
        Height="460"
        Width="700"
        Title="MVVM Light Application"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        DataContext="{Binding Main, Source={StaticResource Locator}}">

  <Window.Resources>
    <ResourceDictionary Source="Skins/MainSkin.xaml" />
  </Window.Resources>

  <Border Opacity="{Binding ElementName=SliderOpacity, Path=Value}" Background="Transparent">
    <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown">
      <ContentControl Content="{StaticResource CloudIcon}"/>
      <Button Click="Button_Click" Style="{StaticResource ButtonExitStyle}" Margin="467,12,200,415" Height="Auto" Width="Auto"/>
      <Grid Margin="15,210,645,124">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition Width="1.5*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="Opacity" TextAlignment="Center">
          <TextBlock.LayoutTransform>
            <RotateTransform Angle="270" />
          </TextBlock.LayoutTransform>
        </TextBlock>
        <Slider Name="SliderOpacity" Orientation="Vertical" Grid.Column="1" Value="0.9" Maximum="1" Minimum="0.1" />
      </Grid>
      <Grid Margin="610,146,20,157">
        <Grid.RowDefinitions>
          <RowDefinition Height="1*"/>
          <RowDefinition Height="1*"/>
          <RowDefinition Height="1*"/>
          <RowDefinition Height="1*"/>
          <RowDefinition Height="1*"/>
          <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="Width" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
        <TextBox Grid.Row="1" Text="{Binding SizeWidth}" PreviewTextInput="WatermarkTextBox_PreviewTextInput" LostFocus="TextBox_LostFocus"/>
        <TextBlock Grid.Row="2" Text="Height" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
        <TextBox Grid.Row="3" Text="{Binding SizeHeight}" PreviewTextInput="WatermarkTextBox_PreviewTextInput" LostFocus="TextBox_LostFocus"/>
        <TextBlock Grid.Row="4" Text="Font max" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
        <TextBox Grid.Row="5" Text="{Binding MaxFontSize}" PreviewTextInput="WatermarkTextBox_PreviewTextInput" LostFocus="TextBox_LostFocus">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="LostFocus">
              <i:InvokeCommandAction Command="{Binding UpdateMaxFontCommand}"/>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </TextBox>
      </Grid>
      <Grid x:Name="LayoutRoot" AllowDrop="True" Margin="60,41,87,76">
        <Grid.RowDefinitions>
          <RowDefinition Height="1*"/>
          <RowDefinition Height="1*"/>
          <RowDefinition Height="8*"/>
          <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <TextBlock FontSize="20" FontWeight="Black" Text="Cloud" TextAlignment="Center" Grid.ColumnSpan="3"/>
        <Grid Grid.Row="1" Grid.ColumnSpan="3">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
          </Grid.ColumnDefinitions>
          <extToolkit:WatermarkTextBox x:Name="PathTextFileBox" Text="{Binding PathTextFile}" Watermark="Enter path text file"/>
          <Button Margin="1" Content="Overview" Grid.Column="1" Command="{Binding OverviewTextFileCommand}"/>
          <Button Margin="1" Grid.Column="2" Command="{Binding OpenTextFileCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <StackPanel>
              <TextBlock Text="Open" TextAlignment="Center"/>
              <ProgressBar Width="100" IsIndeterminate="{Binding IndeterminateOpen}"/>
            </StackPanel>
          </Button>
        </Grid>
        <Button Grid.Row="3" Grid.ColumnSpan="2" Margin="1" Content="Save" Command="{Binding SaveImageCommand}"/>
        <Grid Grid.Column="0" Grid.Row="2" Margin="1">
          <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="15*"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="4*"/>
          </Grid.ColumnDefinitions>
          <TextBlock Text="Good Word" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="DemiBold"/>
          <TextBlock Text="Bad Word" Grid.Column="1" FontSize="15" FontWeight="DemiBold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
          <ListView Margin="1" Grid.Row="1" ItemsSource="{Binding GoodWordCollection}">
            <ListView.View>
              <GridView>
                <GridView.Columns>
                  <GridViewColumn Header="Say" DisplayMemberBinding="{Binding Path=Say}"/>
                  <GridViewColumn Header="FontSize">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <TextBox Text="{Binding FontSize}"/>
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                  <GridViewColumn Header="Color">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <Rectangle Width="10" Height="10">
                          <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding Path=Color}"/>
                          </Rectangle.Fill>
                        </Rectangle>
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                  <GridViewColumn Header="Active">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <CheckBox IsChecked="{Binding Active}"/>
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                </GridView.Columns>
              </GridView>
            </ListView.View>
          </ListView>
          <ListView Margin="1" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding BadWordCollection}">
            <ListView.View>
              <GridView>
                <GridView.Columns>
                  <GridViewColumn Header="Say" DisplayMemberBinding="{Binding Say}"/>
                  <GridViewColumn Header="FontSize">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <TextBox Text="{Binding FontSize}"/>
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                  <GridViewColumn Header="Color">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <Rectangle Width="10" Height="10">
                          <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding Path=Color}"/>
                          </Rectangle.Fill>
                        </Rectangle>
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                  <GridViewColumn Header="Active">
                    <GridViewColumn.CellTemplate>
                      <DataTemplate>
                        <CheckBox IsChecked="{Binding Active}"/>
                      </DataTemplate>
                    </GridViewColumn.CellTemplate>
                  </GridViewColumn>
                </GridView.Columns>
              </GridView>
            </ListView.View>
          </ListView>
          <Grid Grid.Column="2" Grid.RowSpan="2">
            <Grid.RowDefinitions>
              <RowDefinition Height="9*"/>
              <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <ContentControl Panel.ZIndex="2" Content="{StaticResource LoupeIcon}" Height="20" Width="20" Margin="10,10,246,190">
              <ContentControl.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                  <BeginStoryboard>
                    <Storyboard TargetName="border">
                      <Int32Animation Storyboard.TargetProperty="(Panel.ZIndex)" To="2" SpeedRatio="10"/>
                      <DoubleAnimation To="2.57" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation To="2.12" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation To="-335" Storyboard.TargetProperty="RenderTransform.Children[1].X">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation To="-105" Storyboard.TargetProperty="RenderTransform.Children[1].Y">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
              </ContentControl.Triggers>
            </ContentControl>
            <Border Name="border" Background="White" CornerRadius="10" Margin="1">
              <Border.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="1"/>
                  <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
              </Border.RenderTransform>
              <Border.Triggers>
                <EventTrigger RoutedEvent="MouseLeave">
                  <BeginStoryboard>
                    <Storyboard>
                      <Int32Animation Storyboard.TargetProperty="(Panel.ZIndex)" To="1"/>
                      <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.1" To="1"/>
                      <DoubleAnimation To="1" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation To="1" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation To="0" Storyboard.TargetProperty="RenderTransform.Children[1].X">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation To="0" Storyboard.TargetProperty="RenderTransform.Children[1].Y">
                        <DoubleAnimation.EasingFunction>
                          <PowerEase Power="10" EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
              </Border.Triggers>
              <Image Source="{Binding BitmapImage}">
                <Image.CacheMode>
                  <BitmapCache RenderAtScale="2" />
                </Image.CacheMode>
              </Image>
            </Border>
            <Button Grid.Row="2" Margin="1" Command="{Binding CreateImageCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
              <StackPanel>
                <TextBlock Text="Create" TextAlignment="Center"/>
                <ProgressBar Width="260" IsIndeterminate="{Binding IndeterminateCreate}"/>
              </StackPanel>
            </Button>
          </Grid>
        </Grid>
      </Grid>
    </Grid>
  </Border>
</Window>
